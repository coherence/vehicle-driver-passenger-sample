// Copyright (c) coherence ApS.
// For all coherence generated code, the coherence SDK license terms apply. See the license file in the coherence Package root folder for more information.

// <auto-generated>
// Generated file. DO NOT EDIT!
// </auto-generated>
namespace Coherence.Generated
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using UnityEngine;
    using Coherence.Toolkit;
    using Coherence.Toolkit.Bindings;
    using Coherence.Entities;
    using Coherence.ProtocolDef;
    using Coherence.Brook;
    using Coherence.Toolkit.Bindings.ValueBindings;
    using Coherence.Toolkit.Bindings.TransformBindings;
    using Coherence.Connection;
    using Coherence.SimulationFrame;
    using Coherence.Interpolation;
    using Coherence.Log;
    using Logger = Coherence.Log.Logger;
    using UnityEngine.Scripting;
    [UnityEngine.Scripting.Preserve]
    public class Binding_21cb728274153f54c8abde62f5c205eb_677ced1f43994422b736489eb1236581 : PositionBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(WorldPosition);
        public override string CoherenceComponentName => "WorldPosition";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Vector3 Value
        {
            get { return (UnityEngine.Vector3)(coherenceSync.coherencePosition); }
            set { coherenceSync.coherencePosition = (UnityEngine.Vector3)(value); }
        }

        protected override (UnityEngine.Vector3 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((WorldPosition)coherenceComponent).value;
            if (!coherenceSync.HasParentWithCoherenceSync) { value += floatingOriginDelta; }

            var simFrame = ((WorldPosition)coherenceComponent).valueSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (WorldPosition)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.value = Value;
            }
            else
            {
                update.value = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.valueSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new WorldPosition();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_21cb728274153f54c8abde62f5c205eb_0cbed24928114772a91659eef2c29f43 : RotationBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(WorldOrientation);
        public override string CoherenceComponentName => "WorldOrientation";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Quaternion Value
        {
            get { return (UnityEngine.Quaternion)(coherenceSync.coherenceRotation); }
            set { coherenceSync.coherenceRotation = (UnityEngine.Quaternion)(value); }
        }

        protected override (UnityEngine.Quaternion value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((WorldOrientation)coherenceComponent).value;

            var simFrame = ((WorldOrientation)coherenceComponent).valueSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (WorldOrientation)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.value = Value;
            }
            else
            {
                update.value = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.valueSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new WorldOrientation();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_21cb728274153f54c8abde62f5c205eb_dd080b3318404ac8b646ca88387c3083 : DeepRotationBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_21cb728274153f54c8abde62f5c205eb_5564519037632416404);
        public override string CoherenceComponentName => "_21cb728274153f54c8abde62f5c205eb_5564519037632416404";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Quaternion Value
        {
            get { return (UnityEngine.Quaternion)(CastedUnityComponent.localRotation); }
            set { CastedUnityComponent.localRotation = (UnityEngine.Quaternion)(value); }
        }

        protected override (UnityEngine.Quaternion value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_21cb728274153f54c8abde62f5c205eb_5564519037632416404)coherenceComponent).rotation;

            var simFrame = ((_21cb728274153f54c8abde62f5c205eb_5564519037632416404)coherenceComponent).rotationSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_21cb728274153f54c8abde62f5c205eb_5564519037632416404)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.rotation = Value;
            }
            else
            {
                update.rotation = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.rotationSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _21cb728274153f54c8abde62f5c205eb_5564519037632416404();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_21cb728274153f54c8abde62f5c205eb_e3adc35028674bb789630bc1cbe9597d : DeepPositionBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_21cb728274153f54c8abde62f5c205eb_2951459172528959962);
        public override string CoherenceComponentName => "_21cb728274153f54c8abde62f5c205eb_2951459172528959962";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Vector3 Value
        {
            get { return (UnityEngine.Vector3)(CastedUnityComponent.localPosition); }
            set { CastedUnityComponent.localPosition = (UnityEngine.Vector3)(value); }
        }

        protected override (UnityEngine.Vector3 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_21cb728274153f54c8abde62f5c205eb_2951459172528959962)coherenceComponent).position;

            var simFrame = ((_21cb728274153f54c8abde62f5c205eb_2951459172528959962)coherenceComponent).positionSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_21cb728274153f54c8abde62f5c205eb_2951459172528959962)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.position = Value;
            }
            else
            {
                update.position = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.positionSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _21cb728274153f54c8abde62f5c205eb_2951459172528959962();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_21cb728274153f54c8abde62f5c205eb_11153a1fd91d4d158cdfc6d0d255b66c : DeepRotationBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_21cb728274153f54c8abde62f5c205eb_1259671932668666791);
        public override string CoherenceComponentName => "_21cb728274153f54c8abde62f5c205eb_1259671932668666791";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Quaternion Value
        {
            get { return (UnityEngine.Quaternion)(CastedUnityComponent.localRotation); }
            set { CastedUnityComponent.localRotation = (UnityEngine.Quaternion)(value); }
        }

        protected override (UnityEngine.Quaternion value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_21cb728274153f54c8abde62f5c205eb_1259671932668666791)coherenceComponent).rotation;

            var simFrame = ((_21cb728274153f54c8abde62f5c205eb_1259671932668666791)coherenceComponent).rotationSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_21cb728274153f54c8abde62f5c205eb_1259671932668666791)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.rotation = Value;
            }
            else
            {
                update.rotation = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.rotationSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _21cb728274153f54c8abde62f5c205eb_1259671932668666791();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_21cb728274153f54c8abde62f5c205eb_ebc22a79e1614c7199f9b284aaaddf6d : DeepPositionBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_21cb728274153f54c8abde62f5c205eb_4470614517599846282);
        public override string CoherenceComponentName => "_21cb728274153f54c8abde62f5c205eb_4470614517599846282";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Vector3 Value
        {
            get { return (UnityEngine.Vector3)(CastedUnityComponent.localPosition); }
            set { CastedUnityComponent.localPosition = (UnityEngine.Vector3)(value); }
        }

        protected override (UnityEngine.Vector3 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_21cb728274153f54c8abde62f5c205eb_4470614517599846282)coherenceComponent).position;

            var simFrame = ((_21cb728274153f54c8abde62f5c205eb_4470614517599846282)coherenceComponent).positionSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_21cb728274153f54c8abde62f5c205eb_4470614517599846282)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.position = Value;
            }
            else
            {
                update.position = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.positionSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _21cb728274153f54c8abde62f5c205eb_4470614517599846282();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_21cb728274153f54c8abde62f5c205eb_5609300574a44326b53684400f3af053 : DeepRotationBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_21cb728274153f54c8abde62f5c205eb_805111976255883772);
        public override string CoherenceComponentName => "_21cb728274153f54c8abde62f5c205eb_805111976255883772";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Quaternion Value
        {
            get { return (UnityEngine.Quaternion)(CastedUnityComponent.localRotation); }
            set { CastedUnityComponent.localRotation = (UnityEngine.Quaternion)(value); }
        }

        protected override (UnityEngine.Quaternion value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_21cb728274153f54c8abde62f5c205eb_805111976255883772)coherenceComponent).rotation;

            var simFrame = ((_21cb728274153f54c8abde62f5c205eb_805111976255883772)coherenceComponent).rotationSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_21cb728274153f54c8abde62f5c205eb_805111976255883772)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.rotation = Value;
            }
            else
            {
                update.rotation = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.rotationSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _21cb728274153f54c8abde62f5c205eb_805111976255883772();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_21cb728274153f54c8abde62f5c205eb_ed2c48779d904b73b0f923a9ea12b454 : DeepPositionBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_21cb728274153f54c8abde62f5c205eb_6631482869218822685);
        public override string CoherenceComponentName => "_21cb728274153f54c8abde62f5c205eb_6631482869218822685";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Vector3 Value
        {
            get { return (UnityEngine.Vector3)(CastedUnityComponent.localPosition); }
            set { CastedUnityComponent.localPosition = (UnityEngine.Vector3)(value); }
        }

        protected override (UnityEngine.Vector3 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_21cb728274153f54c8abde62f5c205eb_6631482869218822685)coherenceComponent).position;

            var simFrame = ((_21cb728274153f54c8abde62f5c205eb_6631482869218822685)coherenceComponent).positionSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_21cb728274153f54c8abde62f5c205eb_6631482869218822685)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.position = Value;
            }
            else
            {
                update.position = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.positionSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _21cb728274153f54c8abde62f5c205eb_6631482869218822685();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_21cb728274153f54c8abde62f5c205eb_780c656516a340c58a804f58181f9c47 : DeepRotationBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_21cb728274153f54c8abde62f5c205eb_8313270696784286322);
        public override string CoherenceComponentName => "_21cb728274153f54c8abde62f5c205eb_8313270696784286322";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Quaternion Value
        {
            get { return (UnityEngine.Quaternion)(CastedUnityComponent.localRotation); }
            set { CastedUnityComponent.localRotation = (UnityEngine.Quaternion)(value); }
        }

        protected override (UnityEngine.Quaternion value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_21cb728274153f54c8abde62f5c205eb_8313270696784286322)coherenceComponent).rotation;

            var simFrame = ((_21cb728274153f54c8abde62f5c205eb_8313270696784286322)coherenceComponent).rotationSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_21cb728274153f54c8abde62f5c205eb_8313270696784286322)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.rotation = Value;
            }
            else
            {
                update.rotation = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.rotationSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _21cb728274153f54c8abde62f5c205eb_8313270696784286322();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_21cb728274153f54c8abde62f5c205eb_59898e39506d4628a02cd8546887fa03 : DeepPositionBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_21cb728274153f54c8abde62f5c205eb_7765446909568211354);
        public override string CoherenceComponentName => "_21cb728274153f54c8abde62f5c205eb_7765446909568211354";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Vector3 Value
        {
            get { return (UnityEngine.Vector3)(CastedUnityComponent.localPosition); }
            set { CastedUnityComponent.localPosition = (UnityEngine.Vector3)(value); }
        }

        protected override (UnityEngine.Vector3 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_21cb728274153f54c8abde62f5c205eb_7765446909568211354)coherenceComponent).position;

            var simFrame = ((_21cb728274153f54c8abde62f5c205eb_7765446909568211354)coherenceComponent).positionSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_21cb728274153f54c8abde62f5c205eb_7765446909568211354)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.position = Value;
            }
            else
            {
                update.position = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.positionSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _21cb728274153f54c8abde62f5c205eb_7765446909568211354();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_21cb728274153f54c8abde62f5c205eb_29aa8b7517f4458fa20b5dddcae4f2a4 : DeepRotationBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_21cb728274153f54c8abde62f5c205eb_756833534844681836);
        public override string CoherenceComponentName => "_21cb728274153f54c8abde62f5c205eb_756833534844681836";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Quaternion Value
        {
            get { return (UnityEngine.Quaternion)(CastedUnityComponent.localRotation); }
            set { CastedUnityComponent.localRotation = (UnityEngine.Quaternion)(value); }
        }

        protected override (UnityEngine.Quaternion value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_21cb728274153f54c8abde62f5c205eb_756833534844681836)coherenceComponent).rotation;

            var simFrame = ((_21cb728274153f54c8abde62f5c205eb_756833534844681836)coherenceComponent).rotationSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_21cb728274153f54c8abde62f5c205eb_756833534844681836)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.rotation = Value;
            }
            else
            {
                update.rotation = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.rotationSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _21cb728274153f54c8abde62f5c205eb_756833534844681836();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_21cb728274153f54c8abde62f5c205eb_b8105b3f2ac740e281bd289e1b4bab69 : DeepRotationBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_21cb728274153f54c8abde62f5c205eb_206740399366135098);
        public override string CoherenceComponentName => "_21cb728274153f54c8abde62f5c205eb_206740399366135098";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Quaternion Value
        {
            get { return (UnityEngine.Quaternion)(CastedUnityComponent.localRotation); }
            set { CastedUnityComponent.localRotation = (UnityEngine.Quaternion)(value); }
        }

        protected override (UnityEngine.Quaternion value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_21cb728274153f54c8abde62f5c205eb_206740399366135098)coherenceComponent).rotation;

            var simFrame = ((_21cb728274153f54c8abde62f5c205eb_206740399366135098)coherenceComponent).rotationSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_21cb728274153f54c8abde62f5c205eb_206740399366135098)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.rotation = Value;
            }
            else
            {
                update.rotation = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.rotationSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _21cb728274153f54c8abde62f5c205eb_206740399366135098();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_21cb728274153f54c8abde62f5c205eb_2a518feb381c412c9b08deaf0571a22b : DeepRotationBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_21cb728274153f54c8abde62f5c205eb_2050001688815156589);
        public override string CoherenceComponentName => "_21cb728274153f54c8abde62f5c205eb_2050001688815156589";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Quaternion Value
        {
            get { return (UnityEngine.Quaternion)(CastedUnityComponent.localRotation); }
            set { CastedUnityComponent.localRotation = (UnityEngine.Quaternion)(value); }
        }

        protected override (UnityEngine.Quaternion value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_21cb728274153f54c8abde62f5c205eb_2050001688815156589)coherenceComponent).rotation;

            var simFrame = ((_21cb728274153f54c8abde62f5c205eb_2050001688815156589)coherenceComponent).rotationSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_21cb728274153f54c8abde62f5c205eb_2050001688815156589)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.rotation = Value;
            }
            else
            {
                update.rotation = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.rotationSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _21cb728274153f54c8abde62f5c205eb_2050001688815156589();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_21cb728274153f54c8abde62f5c205eb_a4867c76d07a4691b72fd66c085bd7c6 : DeepRotationBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_21cb728274153f54c8abde62f5c205eb_1720866131325391453);
        public override string CoherenceComponentName => "_21cb728274153f54c8abde62f5c205eb_1720866131325391453";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Quaternion Value
        {
            get { return (UnityEngine.Quaternion)(CastedUnityComponent.localRotation); }
            set { CastedUnityComponent.localRotation = (UnityEngine.Quaternion)(value); }
        }

        protected override (UnityEngine.Quaternion value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_21cb728274153f54c8abde62f5c205eb_1720866131325391453)coherenceComponent).rotation;

            var simFrame = ((_21cb728274153f54c8abde62f5c205eb_1720866131325391453)coherenceComponent).rotationSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_21cb728274153f54c8abde62f5c205eb_1720866131325391453)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.rotation = Value;
            }
            else
            {
                update.rotation = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.rotationSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _21cb728274153f54c8abde62f5c205eb_1720866131325391453();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_21cb728274153f54c8abde62f5c205eb_b4809a00964a4521ad982add9825acc0 : BoolBinding
    {   
        private global::Vehicle CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::Vehicle)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_21cb728274153f54c8abde62f5c205eb_7111738075838154005);
        public override string CoherenceComponentName => "_21cb728274153f54c8abde62f5c205eb_7111738075838154005";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override System.Boolean Value
        {
            get { return (System.Boolean)(CastedUnityComponent.hasDriver); }
            set { CastedUnityComponent.hasDriver = (System.Boolean)(value); }
        }

        protected override (System.Boolean value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_21cb728274153f54c8abde62f5c205eb_7111738075838154005)coherenceComponent).hasDriver;

            var simFrame = ((_21cb728274153f54c8abde62f5c205eb_7111738075838154005)coherenceComponent).hasDriverSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_21cb728274153f54c8abde62f5c205eb_7111738075838154005)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.hasDriver = Value;
            }
            else
            {
                update.hasDriver = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.hasDriverSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _21cb728274153f54c8abde62f5c205eb_7111738075838154005();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_21cb728274153f54c8abde62f5c205eb_4f652974c9614301bb133483a91e4787 : BoolBinding
    {   
        private global::Vehicle CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::Vehicle)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_21cb728274153f54c8abde62f5c205eb_7111738075838154005);
        public override string CoherenceComponentName => "_21cb728274153f54c8abde62f5c205eb_7111738075838154005";
        public override uint FieldMask => 0b00000000000000000000000000000010;

        public override System.Boolean Value
        {
            get { return (System.Boolean)(CastedUnityComponent.hasPassenger); }
            set { CastedUnityComponent.hasPassenger = (System.Boolean)(value); }
        }

        protected override (System.Boolean value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_21cb728274153f54c8abde62f5c205eb_7111738075838154005)coherenceComponent).hasPassenger;

            var simFrame = ((_21cb728274153f54c8abde62f5c205eb_7111738075838154005)coherenceComponent).hasPassengerSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_21cb728274153f54c8abde62f5c205eb_7111738075838154005)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.hasPassenger = Value;
            }
            else
            {
                update.hasPassenger = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.hasPassengerSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _21cb728274153f54c8abde62f5c205eb_7111738075838154005();
        }    
    }

    [UnityEngine.Scripting.Preserve]
    public class CoherenceSync_21cb728274153f54c8abde62f5c205eb : CoherenceSyncBaked
    {
        private Entity entityId;
        private Logger logger = Coherence.Log.Log.GetLogger<CoherenceSync_21cb728274153f54c8abde62f5c205eb>();
        
        private global::Vehicle _21cb728274153f54c8abde62f5c205eb_5dc56a424798449c8671b425fa6ac326_CommandTarget;
        private global::Vehicle _21cb728274153f54c8abde62f5c205eb_7aacc70bdeb04985a3583107060de8f2_CommandTarget;
        
        
        private IClient client;
        private CoherenceBridge bridge;
        
        private readonly Dictionary<string, Binding> bakedValueBindings = new Dictionary<string, Binding>()
        {
			["677ced1f43994422b736489eb1236581"] = new Binding_21cb728274153f54c8abde62f5c205eb_677ced1f43994422b736489eb1236581(),
			["0cbed24928114772a91659eef2c29f43"] = new Binding_21cb728274153f54c8abde62f5c205eb_0cbed24928114772a91659eef2c29f43(),
			["dd080b3318404ac8b646ca88387c3083"] = new Binding_21cb728274153f54c8abde62f5c205eb_dd080b3318404ac8b646ca88387c3083(),
			["e3adc35028674bb789630bc1cbe9597d"] = new Binding_21cb728274153f54c8abde62f5c205eb_e3adc35028674bb789630bc1cbe9597d(),
			["11153a1fd91d4d158cdfc6d0d255b66c"] = new Binding_21cb728274153f54c8abde62f5c205eb_11153a1fd91d4d158cdfc6d0d255b66c(),
			["ebc22a79e1614c7199f9b284aaaddf6d"] = new Binding_21cb728274153f54c8abde62f5c205eb_ebc22a79e1614c7199f9b284aaaddf6d(),
			["5609300574a44326b53684400f3af053"] = new Binding_21cb728274153f54c8abde62f5c205eb_5609300574a44326b53684400f3af053(),
			["ed2c48779d904b73b0f923a9ea12b454"] = new Binding_21cb728274153f54c8abde62f5c205eb_ed2c48779d904b73b0f923a9ea12b454(),
			["780c656516a340c58a804f58181f9c47"] = new Binding_21cb728274153f54c8abde62f5c205eb_780c656516a340c58a804f58181f9c47(),
			["59898e39506d4628a02cd8546887fa03"] = new Binding_21cb728274153f54c8abde62f5c205eb_59898e39506d4628a02cd8546887fa03(),
			["29aa8b7517f4458fa20b5dddcae4f2a4"] = new Binding_21cb728274153f54c8abde62f5c205eb_29aa8b7517f4458fa20b5dddcae4f2a4(),
			["b8105b3f2ac740e281bd289e1b4bab69"] = new Binding_21cb728274153f54c8abde62f5c205eb_b8105b3f2ac740e281bd289e1b4bab69(),
			["2a518feb381c412c9b08deaf0571a22b"] = new Binding_21cb728274153f54c8abde62f5c205eb_2a518feb381c412c9b08deaf0571a22b(),
			["a4867c76d07a4691b72fd66c085bd7c6"] = new Binding_21cb728274153f54c8abde62f5c205eb_a4867c76d07a4691b72fd66c085bd7c6(),
			["b4809a00964a4521ad982add9825acc0"] = new Binding_21cb728274153f54c8abde62f5c205eb_b4809a00964a4521ad982add9825acc0(),
			["4f652974c9614301bb133483a91e4787"] = new Binding_21cb728274153f54c8abde62f5c205eb_4f652974c9614301bb133483a91e4787(),
        };
        
        private Dictionary<string, Action<CommandBinding, CommandsHandler>> bakedCommandBindings = new Dictionary<string, Action<CommandBinding, CommandsHandler>>();
        
        public CoherenceSync_21cb728274153f54c8abde62f5c205eb()
        {
            bakedCommandBindings.Add("5dc56a424798449c8671b425fa6ac326", BakeCommandBinding__21cb728274153f54c8abde62f5c205eb_5dc56a424798449c8671b425fa6ac326);
            bakedCommandBindings.Add("7aacc70bdeb04985a3583107060de8f2", BakeCommandBinding__21cb728274153f54c8abde62f5c205eb_7aacc70bdeb04985a3583107060de8f2);
        }
        
        public override Binding BakeValueBinding(Binding valueBinding)
        {
            if (bakedValueBindings.TryGetValue(valueBinding.guid, out var bakedBinding))
            {
                valueBinding.CloneTo(bakedBinding);
                return bakedBinding;
            }
            
            return null;
        }
        
        public override void BakeCommandBinding(CommandBinding commandBinding, CommandsHandler commandsHandler)
        {
            if (bakedCommandBindings.TryGetValue(commandBinding.guid, out var commandBindingBaker))
            {
                commandBindingBaker.Invoke(commandBinding, commandsHandler);
            }
        }
        private void BakeCommandBinding__21cb728274153f54c8abde62f5c205eb_5dc56a424798449c8671b425fa6ac326(CommandBinding commandBinding, CommandsHandler commandsHandler)
        {
            _21cb728274153f54c8abde62f5c205eb_5dc56a424798449c8671b425fa6ac326_CommandTarget = (global::Vehicle)commandBinding.UnityComponent;
            commandsHandler.AddBakedCommand(
            	"Vehicle.RequestBoardingAsPassenger",
            	"(Coherence.Toolkit.CoherenceSync)",
            	SendCommand__21cb728274153f54c8abde62f5c205eb_5dc56a424798449c8671b425fa6ac326,
            	ReceiveLocalCommand__21cb728274153f54c8abde62f5c205eb_5dc56a424798449c8671b425fa6ac326,
            	MessageTarget.All,
            	_21cb728274153f54c8abde62f5c205eb_5dc56a424798449c8671b425fa6ac326_CommandTarget,
            	commandBinding.UsesMeta());
        }
        
        private void SendCommand__21cb728274153f54c8abde62f5c205eb_5dc56a424798449c8671b425fa6ac326(GenericCommandRequestArgs requestArgs)
        {
            var command = new _21cb728274153f54c8abde62f5c205eb_5dc56a424798449c8671b425fa6ac326();
            command.Frame = requestArgs.Frame;
            command.SenderClientID = requestArgs.Sender;
            command.UsesMeta = requestArgs.UsesMeta;
            command.Target = requestArgs.Target;
            command.Entity = entityId;

            command.requester = (Entity)bridge.UnityObjectToEntityId(requestArgs.Args[0] as Coherence.Toolkit.CoherenceSync);

            client.SendCommand(command, requestArgs.ChannelID);
        }
        
        private void ReceiveLocalCommand__21cb728274153f54c8abde62f5c205eb_5dc56a424798449c8671b425fa6ac326(GenericCommandRequestArgs requestArgs)
        {
            var command = new _21cb728274153f54c8abde62f5c205eb_5dc56a424798449c8671b425fa6ac326();
            command.Frame = requestArgs.Frame;
            command.SenderClientID = requestArgs.Sender;

            command.requester = (Entity)bridge.UnityObjectToEntityId(requestArgs.Args[0] as Coherence.Toolkit.CoherenceSync);

            ReceiveCommand__21cb728274153f54c8abde62f5c205eb_5dc56a424798449c8671b425fa6ac326(command);
        }

        private void ReceiveCommand__21cb728274153f54c8abde62f5c205eb_5dc56a424798449c8671b425fa6ac326(_21cb728274153f54c8abde62f5c205eb_5dc56a424798449c8671b425fa6ac326 command)
        {
            var target = _21cb728274153f54c8abde62f5c205eb_5dc56a424798449c8671b425fa6ac326_CommandTarget;
			target.RequestBoardingAsPassenger(bridge.EntityIdToCoherenceSync(command.requester));
        }
        private void BakeCommandBinding__21cb728274153f54c8abde62f5c205eb_7aacc70bdeb04985a3583107060de8f2(CommandBinding commandBinding, CommandsHandler commandsHandler)
        {
            _21cb728274153f54c8abde62f5c205eb_7aacc70bdeb04985a3583107060de8f2_CommandTarget = (global::Vehicle)commandBinding.UnityComponent;
            commandsHandler.AddBakedCommand(
            	"Vehicle.RemovePassengerOnAuthority",
            	"()",
            	SendCommand__21cb728274153f54c8abde62f5c205eb_7aacc70bdeb04985a3583107060de8f2,
            	ReceiveLocalCommand__21cb728274153f54c8abde62f5c205eb_7aacc70bdeb04985a3583107060de8f2,
            	MessageTarget.All,
            	_21cb728274153f54c8abde62f5c205eb_7aacc70bdeb04985a3583107060de8f2_CommandTarget,
            	commandBinding.UsesMeta());
        }
        
        private void SendCommand__21cb728274153f54c8abde62f5c205eb_7aacc70bdeb04985a3583107060de8f2(GenericCommandRequestArgs requestArgs)
        {
            var command = new _21cb728274153f54c8abde62f5c205eb_7aacc70bdeb04985a3583107060de8f2();
            command.Frame = requestArgs.Frame;
            command.SenderClientID = requestArgs.Sender;
            command.UsesMeta = requestArgs.UsesMeta;
            command.Target = requestArgs.Target;
            command.Entity = entityId;


            client.SendCommand(command, requestArgs.ChannelID);
        }
        
        private void ReceiveLocalCommand__21cb728274153f54c8abde62f5c205eb_7aacc70bdeb04985a3583107060de8f2(GenericCommandRequestArgs requestArgs)
        {
            var command = new _21cb728274153f54c8abde62f5c205eb_7aacc70bdeb04985a3583107060de8f2();
            command.Frame = requestArgs.Frame;
            command.SenderClientID = requestArgs.Sender;


            ReceiveCommand__21cb728274153f54c8abde62f5c205eb_7aacc70bdeb04985a3583107060de8f2(command);
        }

        private void ReceiveCommand__21cb728274153f54c8abde62f5c205eb_7aacc70bdeb04985a3583107060de8f2(_21cb728274153f54c8abde62f5c205eb_7aacc70bdeb04985a3583107060de8f2 command)
        {
            var target = _21cb728274153f54c8abde62f5c205eb_7aacc70bdeb04985a3583107060de8f2_CommandTarget;
			target.RemovePassengerOnAuthority();
        }
        
        public override void ReceiveCommand(IEntityCommand command)
        {
            switch (command)
            {
                case _21cb728274153f54c8abde62f5c205eb_5dc56a424798449c8671b425fa6ac326 castedCommand:
                    ReceiveCommand__21cb728274153f54c8abde62f5c205eb_5dc56a424798449c8671b425fa6ac326(castedCommand);
                    break;
                case _21cb728274153f54c8abde62f5c205eb_7aacc70bdeb04985a3583107060de8f2 castedCommand:
                    ReceiveCommand__21cb728274153f54c8abde62f5c205eb_7aacc70bdeb04985a3583107060de8f2(castedCommand);
                    break;
                default:
                    logger.Warning(Coherence.Log.Warning.ToolkitBakedSyncReceiveCommandUnhandled,
                        $"CoherenceSync_21cb728274153f54c8abde62f5c205eb Unhandled command: {command.GetType()}.");
                    break;
            }
        }
        
        public override void CreateEntity(bool usesLodsAtRuntime, string archetypeName, AbsoluteSimulationFrame simFrame, List<ICoherenceComponentData> components)
        {

            if (!usesLodsAtRuntime)
            {
                return;
            }
            
            if (Archetypes.IndexForName.TryGetValue(archetypeName, out int archetypeIndex))
            {
                components.Add(new ArchetypeComponent
                    {
                        index = archetypeIndex,
                        indexSimulationFrame = simFrame,
                        FieldsMask = 0b1
                    }
                );

                return;                
            }
    
            logger.Warning(Coherence.Log.Warning.ToolkitBakedSyncCreateEntityMissingArchetype,
                $"Unable to find archetype {archetypeName} in dictionary. Please, bake manually (coherence > Bake)");
        }
        
        public override void Dispose()
        {
        }
        
        public override void Initialize(Entity entityId, CoherenceBridge bridge, IClient client, CoherenceInput input, Logger logger)
        {
            this.logger = logger.With<CoherenceSync_21cb728274153f54c8abde62f5c205eb>();
            this.bridge = bridge;
            this.entityId = entityId;
            this.client = client;        
        }
    }
}
